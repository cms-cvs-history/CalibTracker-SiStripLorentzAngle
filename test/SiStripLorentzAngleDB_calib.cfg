process analyze = 
{
 # include services
 include "Configuration/ReleaseValidation/data/Services.cfi"
 
# include "Configuration/Examples/data/MessageLogger.cfi"

#service = MessageLogger {
#    untracked vstring destinations = { "debug"
#                                      }
#    untracked PSet debug = { untracked string threshold = "DEBUG"    } 
#    untracked PSet cout = { untracked string threshold = "DEBUG"    } 
#    untracked vstring debugModules =  { "read" 
#              		              }
#  }
  
  service = MessageLogger {
	untracked vstring destinations = { "write_langle_geom_ideal_blob.log" ,"cout"}
	untracked PSet write_langle_geom_ideal_blob.log = { untracked string threshold = "INFO" }
    }
  
  source = PoolSource
    {	  
           #Muons pt4-20
           untracked vstring fileNames = 
     	       {
	        "rfio:/castor/cern.ch/user/s/sfrosali/TestSiStripLA/sim_1000_reco.root"
	       }
	       	   
     untracked int32 maxEvents = 20
    }
    
#  include "Geometry/CMSCommonData/data/cmsIdealGeometryXML.cfi"
    
#  es_module = TrackerGeometricDetESModule {}
#  es_module = TrackerDigiGeometryESModule {}
   
# service = Timing {}

  include "Configuration/StandardSequences/data/Reconstruction.cff"
  
  replace ctfWithMaterialTracks.TrajectoryInEvent = true
       
  #include "Configuration/EventContent/data/FEVTOutput.cff"
  #include "Configuration/EventContent/data/EventContent.cff"
  
  include "CalibTracker/SiStripLorentzAngle/data/SiStripLorentzAngleDB.cfi"
	replace sistripLorentzAngle.TemperatureError =0
  include "CondCore/DBCommon/data/CondDBCommon.cfi"
  replace CondDBCommon.connect = "sqlite_file:/tmp/genta/langle_geom_ideal.db"    
  replace CondDBCommon.catalog = "file:/tmp/genta/langle_geom_ideal.xml"
  service = PoolDBOutputService {
                                   using CondDBCommon
                                   VPSet toPut={ { string record = "SiStripLorentzAngleRcd"   string tag ="mytest_l"} }    
                                }
    
  #path localreco = {trackerlocalreco} # reconstruction
  path recotracks = {ckftracks}	
  path LorentzAngle = {sistripLorentzAngle}
  
  schedule = {recotracks, LorentzAngle}
  
  module print = AsciiOutputModule {}
  endpath ep = { print }
   
}
