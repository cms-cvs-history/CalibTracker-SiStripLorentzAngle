# template file to be used for MTCC data, the script substitutes the list of files and similar
  process RecoTrackSiStripLA = {
 #  MessageLogger
#   include "FWCore/MessageLogger/data/MessageLogger.cfi"
    
    service = MessageLogger {
    untracked vstring destinations = { "debug"
                                      }
    untracked PSet debug = { untracked string threshold = "DEBUG"    } 
    untracked PSet cout = { untracked string threshold = "DEBUG"    } 
    untracked vstring debugModules =  { "read" 
              		              }
  }
  
  # input files
    source = PoolSource
    {
    
	  #MTCC 0.0 T tk00-align
           untracked vstring fileNames = 
     	       {
	       "rfio:/castor/cern.ch/cms/testbeam/tkmtcc/P5_data/tracker_reprocessing/pass2_with_alignment/tk00-align.root"
	       }
	       
     untracked int32 maxEvents = -1
     
  #   untracked bool   debugFlag     = true
    }
  
  # Tracking ---------------------------------------------
  #   include "RecoTracker/SingleTrackPattern/test/messages.cfg"
    include "RecoLocalTracker/SiStripRecHitConverter/data/SiStripRecHitMatcher.cfi"
    #
    # include "RecoLocalTracker/SiStripRecHitConverter/data/SiStripRecHitConverter.cfi"
    
    module siStripMatchedRecHits = SiStripRecHitConverter{
       untracked int32 VerbosityLevel = 1
       string ClusterProducer = "siStripClusters"
       string StripCPE = "StripCPEfromTrackAngle"
       string Matcher = "StandardMatcher"
       string matchedRecHits = "matchedRecHit"
       string rphiRecHits = "rphiRecHit"
       string stereoRecHits = "stereoRecHit"
    }
    
  ############ initialize magnetic field #########################
    # include "MagneticField/Engine/data/volumeBasedMagneticField.cfi"
    include "MagneticField/Engine/data/uniformMagneticField.cfi"
    replace UniformMagneticFieldESProducer.ZFieldInTesla = 0.0
    # default value of ZFieldInTesla is zero
  ############### initialize geometry #####################
    include "Geometry/CMSCommonData/data/cmsMTCCGeometryXML.cfi"
    include "Geometry/TrackerGeometryBuilder/data/trackerGeometry.cfi"
    include "Geometry/TrackerNumberingBuilder/data/trackerNumberingGeometry.cfi"
    include "RecoTracker/GeometryESProducer/data/TrackerRecoGeometryESProducer.cfi"
  # stripCPE
    include "RecoLocalTracker/SiStripRecHitConverter/data/StripCPEfromTrackAngle.cfi"
  # pixelCPE
    include "RecoLocalTracker/SiPixelRecHits/data/PixelCPEParmError.cfi"
  #TransientTrackingBuilder
    include "RecoTracker/TransientTrackingRecHit/data/TransientTrackingRecHitBuilder.cfi"

# Pioppi cfg

#es_module = MisalignedTrackerESProducer
#   {
#       // General settings
#       string distribution = 'fixed'
#       int32 seed = 1234567
#       bool  setError = false
#       untracked bool saveToDbase = false
#       PSet BarrelLayers = {
#           bool setError = true
       #APE = dX * scale * scaleError
       #(1mm)
       #    double dX = 0.1
       #    double scaleError = 10000
       #    double scale = 0.0001
        #sqrt(APE) (because of APE bug)
	#(1mm)
#	   double dX = 0.316227766
#           double scaleError = 100
#           double scale = 0.01
#       }
#       
     #  PSet TOB1 = {
     #     PSet BarrelLayer1 = { double phiZ = 0.02 }
     #	  }
#       
#       PSet TIB1 = { 
#       double phiZ = -0.0628
#       double dX = -4.2705 
#       }
#   }

//Frederic Ronga cff

// Various sets of alignment corrections for the MTCC setup
// It assumes the standard geometry builder is used:
// include "Geometry/TrackerGeometryBuilder/data/trackerGeometry.cfi"

replace TrackerDigiGeometryESModule.applyAlignment = true

es_source = PoolDBESSource { 
   string connect = "sqlite_file:MtccHip00TIBStringsXY.db"
   #
   VPSet toGet = { { string record = "TrackerAlignmentRcd" string tag = "MtccHip00TIBStringsXY" },
     { string record = "TrackerAlignmentErrorRcd" string tag = "MtccHip00TIBStringsXYape100" } }
   bool loadAll = true
   string timetype = "runnumber" 
   untracked uint32 authenticationMethod = 1
}

module cosmicseeds= CosmicSeedGenerator{
    InputTag matchedRecHits = siStripMatchedRecHits:matchedRecHit
    InputTag rphirecHits    = siStripMatchedRecHits:rphiRecHit
    InputTag stereorecHits  = siStripMatchedRecHits:stereoRecHit
    double ptMin=0.9
    double originRadius=150
    double originHalfLength=90
    double originZPosition=0
    string TTRHBuilder        =  "WithTrackAngle"
    untracked string GeometricStructure  = "MTCC"
   }

module cosmictracks= CosmicTrackFinder{
 bool TrajInEvents=true
 InputTag cosmicSeeds = cosmicseeds:
 InputTag matchedRecHits = siStripMatchedRecHits:matchedRecHit
 InputTag rphirecHits    = siStripMatchedRecHits:rphiRecHit
 InputTag stereorecHits  = siStripMatchedRecHits:stereoRecHit
 string HitProducer        = "siStripRecHits"
 int32 MinHits=3
 double Chi2Cut=40.
 string TTRHBuilder   =       "WithTrackAngle"
 untracked  string GeometricStructure ="MTCC"
 }
 
  #-------------------------------------------------------


  # Filters ----------------------------------------------
  # Cluster Filter
    module ClusterMTCCFilter = ClusterMTCCFilter
    {
      string  ClusterProducer = "siStripClusters"
      # thresholds
      int32 ChargeThresholdTIB = 25
      int32 ChargeThresholdTOB = 25
      int32 ChargeThresholdTEC = 70
      # at least 'MinClustersDiffComponents' sub-components (TIB1, TIB2, TIB3, TOB1, TOB2, TEC)
      # with clusters over above respective thresholds
      int32 MinClustersDiffComponents = 3
      # detector modules to be excluded
#      vuint32 ModulesToBeExcluded = {369214217, 369214218}
      vuint32 ModulesToBeExcluded = { }
    }
  # Track Filter
    module TrackMTCCFilter = TrackMTCCFilter
    {
      string  TrackProducer = "cosmictracks"
      string TrackLabel     = ""
      int32 MinNrOfTracks = 1
    }
  #-------------------------------------------------------

  # DQM --------------------------------------------------
  # DQM services
    service = DaqMonitorROOTBackEnd{}
  # MonitorTrackGlobal
    include "DQM/TrackerMonitorTrack/data/MonitorTrackGlobal.cfi"
    replace MonitorTrackGlobal.MTCCData=true
    replace MonitorTrackGlobal.TrackProducer="cosmictracks"
  # Trigger Monitoring, SiStripMonitorHLT
    include "DQM/SiStripMonitorCluster/data/SiStripMonitorHLT.cfi"
    replace SiStripMonitorHLT.HLTProducer="ClusterMTCCFilter"
    replace SiStripMonitorHLT.OutputMEsInRootFile = true
    replace SiStripMonitorHLT.OutputFileName = "SCRIPT_DQM_OUTPUT_FILE"
  #-------------------------------------------------------
  
  module out = PoolOutputModule 
    { 
      untracked string fileName = "reco.root"
    }
    
    module read = SiStripLorentzAngle{
	bool MTCCtrack = true
	bool TrajInEvents = true
	string fitName = "fit_tk00_new_alignment"
	string RecHitProducer = "siStripMatchedRecHits"
	string TTRHBuilder="WithTrackAngle"
	string src = "ctfWithMaterialTracks"
        InputTag cosmicTracks = cosmictracks:
	string fileName = "tk00_new_alignment.root"
	int32 TIBbinning = 50
	int32 TOBbinning = 50
	double ModuleRangeMin = -0.3
	double ModuleRangeMax = 0.3
	double TIBRangeMin = -0.4
	double TIBRangeMax = 0.4
	double TOBRangeMin = -0.2
	double TOBRangeMax = 0.2	
	}
  
  ################# Schedule
   # trigger
   
     path filter                    = {
                                      #ClusterMTCCFilter,
                                      #siStripMatchedRecHits,
                                      cosmicseeds,
                                      cosmictracks,
				      read
                                      #MonitorTrackGlobal
				      }
     
  }
