process Test = {
untracked PSet maxEvents = {untracked int32 input = 1}    
    source = EmptySource {
	untracked uint32 firstRun = 1   
	untracked uint32 numberEventsInRun = 1
    }
    
    service = MessageLogger {
	untracked vstring destinations = { "read_langle_geom_ideal.log" }
	untracked PSet read_langle_geom_ideal_blob.log = { untracked string threshold = "INFO" }
    }
    
    service = Timing {}

#include "CalibTracker/Configuration/data/SiStrip_FrontierLorentzAngle.cff"
#replace siStripLorentzAngle.toGet = {
#{ string record = "SiStripLorentzAngleRcd"
#  string tag = "CSA07_SiStrip_Ideal_LAngle" }
#}
#
#replace siStripLorentzAngle.connect ="oracle://cms_orcoff_int2r/CMS_COND_STRIP"
#
#replace siStripLorentzAngle.siteLocalConfig = false
#replace siStripLorentzAngle.DBParameters = {
##for ORACLE and SQLITE modes
#       untracked string authenticationPath="/afs/cern.ch/cms/DB/conddb"
##      untracked string authenticationPath=""
#       untracked int32 messageLevel=2
#       untracked string BlobStreamerName="TBufferBlobStreamingService"
#}
    
    
    es_source = PoolDBESSource { 
VPSet toGet = {{ string record = "SiStripLorentzAngleRcd" string tag = "mytest_l" }}
	
	string connect = "sqlite_file:/afs/cern.ch/user/s/sfrosali/scratch0/CMSSW_2_0_X_2008-01-21-0200/src/CalibTracker/SiStripLorentzAngle/test/langle_geom_ideal.db"    
	
	string timetype = "runnumber" 

	  untracked string BlobStreamerName="TBufferBlobStreamingService"
	PSet DBParameters = {
	    untracked string authenticationPath="/afs/cern.ch/cms/DB/conddb"
	    untracked int32 messageLevel=2
	  
	}
   }
    
module prod =  SiStripLorentzAngleReader {
#gain             module prod =  SiStripApvGainReader {
#ped              module prod =  SiStripPedestalsReader {
#noise            module prod =  SiStripNoisesReader {
#pednoise         module prod =  SiStripPedestalsNoisesReader {
#debug                  untracked bool   printDebug = true
                   }

       path p = { prod }

       module print = AsciiOutputModule {}
       endpath ep = { print }
}
