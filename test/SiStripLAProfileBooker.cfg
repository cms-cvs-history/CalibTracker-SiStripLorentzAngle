process analyze = 
{
  
untracked PSet maxEvents = {untracked int32 input = 50} 
 
service = MessageLogger {

   untracked vstring destinations = { "debug_test_Vito" }
   
    untracked PSet debug = { untracked string threshold = "DEBUG"    } 
    untracked PSet cout = { untracked string threshold = "DEBUG"    } 
    untracked vstring debugModules =  { "read" , "sistripLorentzAngle"
              		              }
  }
  
 
  source = PoolSource
    {	  
          untracked vstring fileNames = 
     	       {
	          # Minbias
		                
               #"rfio:/castor/cern.ch/user/s/sfrosali/CSA07_analysis/MinBias/Minbias_CMSSW_1_6_0-PreCSA07-HLT-A5/235_reco/root/Minbias_preCSA07_TrackSelection_2.root"
               #"file:ALCARECOtest_HLTFromDigiRaw.root"
	        "file:newALCARECOSiStripCalMinBias.root"
	       
	       #'/store/relval/2008/3/13/RelVal-RelValMinbias-1205444401/0000/2A5B86B4-60F1-DC11-97CD-001617C3B6FE.root',
               #'/store/relval/2008/3/13/RelVal-RelValMinbias-1205444401/0000/364319B1-69F1-DC11-8E61-000423D6B444.root',
               #'/store/relval/2008/3/13/RelVal-RelValMinbias-1205444401/0000/64EDB5C1-A7F1-DC11-8702-000423D9939C.root',
               #'/store/relval/2008/3/13/RelVal-RelValMinbias-1205444401/0000/70B01265-6AF1-DC11-A69C-000423D6CA6E.root'
	       		  
	       }
     	   
    }
    
  include "Geometry/CMSCommonData/data/cmsIdealGeometryXML.cfi"
  include "MagneticField/Engine/data/volumeBasedMagneticField.cfi"

  #Reconstruction
  include "Configuration/StandardSequences/data/Reconstruction.cff"
  
  #FakeConditions
  include "Configuration/StandardSequences/data/FakeConditions.cff"
  
  #Refitter
  include "RecoTracker/TrackProducer/data/RefitterWithMaterial.cff"
  
  module trackrefitter = TrackRefitter 
 {
   string Fitter = "FittingSmootherRK"   
 
   string Propagator = "RungeKuttaTrackerPropagator"
 
   #InputTag src = generalTracks
   InputTag src = ALCARECOSiStripCalMinBias
   InputTag beamSpot      = offlineBeamSpot
   string TTRHBuilder = "WithTrackAngle"
   bool TrajectoryInEvent = true
   string constraint = ""
   string AlgorithmName = "ctf"
   bool useHitsSplitting = false
 }
          
  #service = DaqMonitorROOTBackEnd{}
  include "DQMServices/Core/data/DQM.cfg"
  replace DQM.collectorHost = ""
  
  #SiStripLAProfileBooker
  
  include "CalibTracker/SiStripLorentzAngle/data/SiStripLAProfileBooker.cfi"  
  replace sistripLorentzAngle.Tracks= "trackrefitter"
  
  replace sistripLorentzAngle.fileName="test_Vito.root"
  replace sistripLorentzAngle.treeName="LATrees_test_Vito.root"
  replace sistripLorentzAngle.fitName="fit_test_Vito"
  #replace sistripLorentzAngle.fileName="test.root"
  #replace sistripLorentzAngle.treeName="LATrees_test.root"
  #replace sistripLorentzAngle.fitName="fit_test"
  
  path recotracks = {trackrefitter}
  path LorentzAngle = {sistripLorentzAngle}
 	
  schedule = {recotracks, LorentzAngle}
  
  module print = AsciiOutputModule {}
  endpath ep = { print }
   
}
